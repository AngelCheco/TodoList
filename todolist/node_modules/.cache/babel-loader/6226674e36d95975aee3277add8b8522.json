{"ast":null,"code":"import _classCallCheck from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/src/GithubServe.js\";\nimport React, { Component } from \"react\";\n\nvar GithubServe =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GithubServe, _Component);\n\n  function GithubServe() {\n    var _this;\n\n    _classCallCheck(this, GithubServe);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GithubServe).call(this));\n    _this.state = {\n      \"github_serve_html\": \"\"\n    };\n    _this.github_serve = _this.github_serve.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GithubServe, [{\n    key: \"github_serve\",\n    value: function github_serve() {\n      var _this2 = this;\n\n      fetch('/github', {\n        method: 'get',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.text();\n      }).then(function (res) {\n        _this2.setState({\n          \"github_page\": res\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.github_serve();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: this.state.github_serve_html\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return GithubServe;\n}(Component);\n\nexport default GithubServe;","map":{"version":3,"sources":["/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/src/GithubServe.js"],"names":["React","Component","GithubServe","state","github_serve","bind","fetch","method","headers","then","res","text","setState","catch","err","console","log","__html","github_serve_html"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,W;;;;;AAEL,yBAAa;AAAA;;AAAA;;AACZ;AACA,UAAKC,KAAL,GAAa;AACZ,2BAAoB;AADR,KAAb;AAGA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AALY;AAMZ;;;;mCAEa;AAAA;;AACbC,MAAAA,KAAK,CAAC,SAAD,EAAY;AACfC,QAAAA,MAAM,EAAE,KADO;AAEfC,QAAAA,OAAO,EAAE;AACP,oBAAU,mCADH;AAEP,0BAAgB;AAFT;AAFM,OAAZ,CAAL,CAMGC,IANH,CAMQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OANX,EAM2BF,IAN3B,CAMgC,UAACC,GAAD,EAAO;AAEtC,QAAA,MAAI,CAACE,QAAL,CAAc;AAAC,yBAAcF;AAAf,SAAd;AACA,OATD,EASGG,KATH,CASS,UAAAC,GAAG;AAAA,eAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,OATZ;AAUA;;;wCAEkB;AAClB,WAAKV,YAAL;AACA;;;6BAEO;AACP,aAAO;AAAK,QAAA,uBAAuB,EAAE;AAACa,UAAAA,MAAM,EAAE,KAAKd,KAAL,CAAWe;AAApB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;;;EA7BwBjB,S;;AAgC1B,eAAeC,WAAf","sourcesContent":["import React, {Component} from \"react\";\n\nclass GithubServe extends Component{\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\"github_serve_html\":\"\"\n\t\t}\n\t\tthis.github_serve = this.github_serve.bind(this);\n\t}\n\n\tgithub_serve(){\n\t\tfetch('/github', {\n\t\t  method: 'get',\n\t\t  headers: {\n\t\t    'Accept': 'application/json, text/plain, */*',\n\t\t    'Content-Type': 'application/json'\n\t\t  }\n\t\t}).then(res => res.text()).then((res)=>{\n\n\t\t\tthis.setState({\"github_page\":res});\n\t\t}).catch(err=>console.log(err));\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.github_serve();\n\t}\n\n\trender(){\n\t\treturn(<div dangerouslySetInnerHTML={{__html: this.state.github_serve_html}} ></div>)\n\t}\n}\n\nexport default GithubServe;"]},"metadata":{},"sourceType":"module"}