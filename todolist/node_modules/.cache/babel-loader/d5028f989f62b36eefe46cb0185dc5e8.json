{"ast":null,"code":"import _classCallCheck from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport TodoList from \"./TodoList\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Route, Link } from 'react-router-dom';\n/*\n <TodoList token = {this.state.token}/>\n*/\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n    _this.login = _this.login.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      \"token\": \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      fetch('https://hunter-todo-api.herokuapp.com/auth', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: 'charlie'\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return _this2.setState({\n          \"token\": res.token\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"signup\",\n    value: function signup() {\n      console.log(\"logging in..\");\n    }\n  }, {\n    key: \"github_serve\",\n    value: function github_serve() {\n      console.log(\"logging in..\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Github static serve\"), React.createElement(\"div\", {\n        className: \"login_sys\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Sign up\"), React.createElement(\"input\", {\n        placeholder: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Register\")), React.createElement(\"div\", {\n        className: \"login_sys\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Log in\"), React.createElement(\"input\", {\n        placeholder: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"login\")), React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        render: function render() {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/todolist\",\n        exact: true,\n        strict: true,\n        render: function render() {\n          return React.createElement(TodoList, {\n            token: _this3.state.token,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        id: \"logout\",\n        onClick: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"logout\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/angelc/Desktop/temp_folder/Spring_2019/395/todolist/src/App.js"],"names":["React","Component","TodoList","BrowserRouter","Router","Route","Link","App","login","bind","state","fetch","method","headers","body","JSON","stringify","username","then","res","json","setState","token","catch","err","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TodoList from \"./TodoList\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Route, Link} from 'react-router-dom';\n\n\n/*\n <TodoList token = {this.state.token}/>\n*/\n\n\nclass App extends Component {\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.login = this.login.bind(this);\n\t\tthis.state = {\n\t\t\t\"token\":\"\"\n\t\t}\n\t}\n\n\tlogin(){\n\t\tfetch('https://hunter-todo-api.herokuapp.com/auth', {\n\t\t  method: 'post',\n\t\t  headers: {\n\t\t    'Accept': 'application/json, text/plain, */*',\n\t\t    'Content-Type': 'application/json'\n\t\t  },\n\t\t  body: JSON.stringify({username:'charlie'})\n\t\t}).then(res => res.json()).then(res=>(this.setState({\"token\":res.token}))).catch(err=>console.log(err));\n\t\t\n\t}\n\tsignup(){\n\t\tconsole.log(\"logging in..\");\n\t}\n\n\tgithub_serve(){\n\t\tconsole.log(\"logging in..\");\n\t}\n\n\n  render() {\n    return (\n      <div className=\"App\">\n      \t<button>Github static serve</button>\n        <div className = \"login_sys\">\n        \t<p>Sign up</p>\n        \t<input placeholder = \"username\"/>\n        \t<button onClick = {this.login}>Register</button>\n        </div>\n       \t<div className = \"login_sys\">\n        \t<p>Log in</p>\n        \t<input placeholder = \"username\"/>\n        \t<button onClick = {this.login}>login</button>\n        </div>\n\n\n        <Router>\n       \t\t <Route path = \"/\" exact render = {()=>{return(<div></div>)}}/>\n       \t\t <Route path = \"/todolist\" exact strict render = {()=>{return(<TodoList token = {this.state.token}/>)}}/> \n        </Router>\n\n       \n        \n        <button id = \"logout\" onClick = {this.login}>logout</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}